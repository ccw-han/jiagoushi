https://www.jianshu.com/p/c6553c202da7      很好的解释了干嘛用的。
1服务启动注册中心注册服务
2消费者去中心订阅服务
3注册中心给消费者地址，如变更，长连接推送
4服务消费者负载均衡，选一台提供者调用，不行，另一台
5调用次数和时间定时给监控中心发数据。
第一章 
https://blog.csdn.net/wangtao3333/article/details/80255175	介绍dubbox
当当网
是什么？
Dubbo是一个分布式服务框架，致力于提供高性能和透明化的RPC远程服务调用方案，以及SOA服务治理方案。简单的说，dubbo就是个服务框架，如果没有分布式的需求，其实是不需要用的，只有在分布式的时候，才有dubbo这样的分布式服务框架的需求，并且本质上是个服务调用的东东，说白了就是个远程服务调用的分布式框架（告别Web Service模式中的WSdl，以服务者与消费者的方式在dubbo上注册）
其核心部分包含:
1. 远程通讯: 提供对多种基于长连接的NIO框架抽象封装，包括多种线程模型，序列化，以及“请求-响应”模式的信息交换方式。
2. 集群容错: 提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。
3. 自动发现: 基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。
2. Dubbo能做什么？
1.透明化的远程方法调用，就像调用本地方法一样调用远程方法，只需简单配置，没有任何API侵入。      
2.软负载均衡及容错机制，可在内网替代F5等硬件负载均衡器，降低成本，减少单点。
3. 服务自动注册与发现，不再需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或删除服务提供者。

Dubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。

1主要功能
1 支持http+json 基于Jboss的resteasy框架
2支持高效率kryo序列化实现
3支持jackson的json序列化
4支持嵌入式tomcat的http remoting体系
5 升级spring
6升级zookeeper
7支持基于java代码的dubbo的配置
调用关系说明：
0 服务容器负责启动，加载，运行服务提供者。

1. 服务提供者在启动时，向注册中心注册自己提供的服务。
2. 服务消费者在启动时，向注册中心订阅自己所需的服务。
3. 注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。
4. 服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。
5. 服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心。
dubbo的容错性显而易见，性能方面还没有还得及测，我们系统某页面需要掉5次接口，本来想建议做个缓存，但业务关系不能采纳，还需要研究下dubbo的性能调优问题...

4. dubbo使用方法。
Dubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。如果不想使用Spring配置，而希望通过API的方式进行调用（不推荐）

第二章
1dubbox-provider项目
1entity 实现序列化接口
2http
3service 一般用注解 消费端一般用xml方式配
有俩个service一个是spring的一个是dubbo的（interfaceClass=。。。.class，protocol={“dubbo”,"rest"}，retries=0,很多配置）
4dubbox-provider.xml
引入zc-com的通用配置文件，properties文件
配置zookeeper配置注册中心
配置一个注解
配置kyro实现序列化
dubbo也是有注解的。
配置一个rest服务
启动xml文件启动context，然后start();
2dubbox-consumer
调用服务和provider差不多
1entity一样
2service
3dubbox-consumer.xml
第三章